# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- none

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'e8267d18-96e6-4c98-9831-0586a8945ba4'
  containerRegistry: 'arorobotshop.azurecr.io'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Cart Docker Build and Push
      inputs:
        command: buildAndPush
        repository: 'rs-cart'
        dockerfile: '$(Build.SourcesDirectory)/cart/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - task: Docker@2
      displayName: Catalogue Docker Build and Push
      inputs:
        command: buildAndPush
        repository: 'rs-catalogue'
        dockerfile: '$(Build.SourcesDirectory)/catalogue/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - task: Docker@2
      displayName: MongoDB Docker Build and Push
      inputs:
        command: buildAndPush
        repository: 'rs-mongodb'
        dockerfile: '$(Build.SourcesDirectory)/mongo/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - task: Docker@2
      displayName: MySQL Docker Build and Push
      inputs:
        command: buildAndPush
        repository: 'rs-mysql-db'
        dockerfile: '$(Build.SourcesDirectory)/mysql/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - task: Docker@2
      displayName: Payment Docker Build and Push
      inputs:
        command: buildAndPush
        repository: 'rs-payment'
        dockerfile: '$(Build.SourcesDirectory)/payment/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - task: Docker@2
      displayName: Ratings Docker Build and Push
      inputs:
        command: buildAndPush
        repository: 'rs-ratings'
        dockerfile: '$(Build.SourcesDirectory)/ratings/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - task: Docker@2
      displayName: Shipping Docker Build and Push
      inputs:
        command: buildAndPush
        repository: 'rs-shipping'
        dockerfile: '$(Build.SourcesDirectory)/shipping/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - task: Docker@2
      displayName: User Docker Build and Push
      inputs:
        command: buildAndPush
        repository: 'rs-user'
        dockerfile: '$(Build.SourcesDirectory)/user/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - task: Docker@2
      displayName: Web Docker Build and Push
      inputs:
        command: buildAndPush
        repository: 'rs-web'
        dockerfile: '$(Build.SourcesDirectory)/web/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - task: Docker@2
      displayName: Dispatch Docker Build and Push
      inputs:
        command: buildAndPush
        repository: 'rs-dispatch'
        dockerfile: '$(Build.SourcesDirectory)/dispatch/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - task: CopyFiles@2
      displayName: Copy Build files to Artifact Directory
      inputs:
        SourceFolder: 'K8s'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1 # Create the articaft from publish
      displayName: 'Upload the articaft - $(Build.BuildNumber)'